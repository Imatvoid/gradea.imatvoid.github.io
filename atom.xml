<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://imatvoid.github.io/</id>
    <title>Imatvoid </title>
    <updated>2019-10-04T14:02:41.465Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://imatvoid.github.io/"/>
    <link rel="self" href="https://imatvoid.github.io//atom.xml"/>
    <subtitle>未曾清贫难成人，不经打击老天真。    
自古英雄出炼狱，从来富贵入凡尘。 </subtitle>
    <logo>https://imatvoid.github.io//images/avatar.png</logo>
    <icon>https://imatvoid.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Imatvoid </rights>
    <entry>
        <title type="html"><![CDATA[leetcode -- 81. Search in Rotated Sorted Array II]]></title>
        <id>https://imatvoid.github.io//post/leetcode-81-search-in-rotated-sorted-array-ii</id>
        <link href="https://imatvoid.github.io//post/leetcode-81-search-in-rotated-sorted-array-ii">
        </link>
        <updated>2019-10-03T05:57:51.000Z</updated>
        <summary type="html"><![CDATA[<p><code>81. Search in Rotated Sorted Array II</code></p>
<p><a href="https://leetcode.com/problems/search-in-rotated-sorted-array-ii/">https://leetcode.com/problems/search-in-rotated-sorted-array-ii/</a></p>
<p><code>81. 搜索旋转排序数组 II</code></p>
<p><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/</a></p>
]]></summary>
        <content type="html"><![CDATA[<p><code>81. Search in Rotated Sorted Array II</code></p>
<p><a href="https://leetcode.com/problems/search-in-rotated-sorted-array-ii/">https://leetcode.com/problems/search-in-rotated-sorted-array-ii/</a></p>
<p><code>81. 搜索旋转排序数组 II</code></p>
<p><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是二进制安全]]></title>
        <id>https://imatvoid.github.io//post/shi-me-shi-er-jin-zhi-an-quan</id>
        <link href="https://imatvoid.github.io//post/shi-me-shi-er-jin-zhi-an-quan">
        </link>
        <updated>2019-09-29T03:22:14.000Z</updated>
        <summary type="html"><![CDATA[<p>二进制安全是一种主要用于字符串操作函数相关的计算机编程术语。一个二进制安全功能（函数），其本质上将输入作为原始的、无任何特殊格式意义的数据流。</p>
]]></summary>
        <content type="html"><![CDATA[<p>二进制安全是一种主要用于字符串操作函数相关的计算机编程术语。一个二进制安全功能（函数），其本质上将输入作为原始的、无任何特殊格式意义的数据流。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ Fastjson与Gson的差异]]></title>
        <id>https://imatvoid.github.io//post/fastjson-yu-gson-de-chai-yi</id>
        <link href="https://imatvoid.github.io//post/fastjson-yu-gson-de-chai-yi">
        </link>
        <updated>2019-09-27T12:31:15.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[优雅停服务]]></title>
        <id>https://imatvoid.github.io//post/you-ya-ting-fu-wu</id>
        <link href="https://imatvoid.github.io//post/you-ya-ting-fu-wu">
        </link>
        <updated>2019-09-24T02:39:51.000Z</updated>
        <summary type="html"><![CDATA[<p>考虑rpc,mq,定时任务,日志的停机实现</p>
]]></summary>
        <content type="html"><![CDATA[<p>考虑rpc,mq,定时任务,日志的停机实现</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ShutDownHook]]></title>
        <id>https://imatvoid.github.io//post/shutdownhook</id>
        <link href="https://imatvoid.github.io//post/shutdownhook">
        </link>
        <updated>2019-09-24T02:38:18.000Z</updated>
        <summary type="html"><![CDATA[<p>Shutdown Hooks are a special construct that allow developers to plug in a piece of code to be executed when the JVM is shutting down.</p>
]]></summary>
        <content type="html"><![CDATA[<p>Shutdown Hooks are a special construct that allow developers to plug in a piece of code to be executed when the JVM is shutting down.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[负载均衡算法]]></title>
        <id>https://imatvoid.github.io//post/fu-zai-jun-heng-suan-fa</id>
        <link href="https://imatvoid.github.io//post/fu-zai-jun-heng-suan-fa">
        </link>
        <updated>2019-09-22T15:20:10.000Z</updated>
        <summary type="html"><![CDATA[<p><a href=""></a></p>
]]></summary>
        <content type="html"><![CDATA[<p><a href=""></a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TargetSource]]></title>
        <id>https://imatvoid.github.io//post/targetsource</id>
        <link href="https://imatvoid.github.io//post/targetsource">
        </link>
        <updated>2019-09-13T06:27:47.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[布隆过滤器]]></title>
        <id>https://imatvoid.github.io//post/bu-long-guo-lu-qi</id>
        <link href="https://imatvoid.github.io//post/bu-long-guo-lu-qi">
        </link>
        <updated>2019-09-12T05:44:04.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="介绍">介绍</h2>
<p><strong>mightContains</strong></p>
<p>判断某个值存在时，这个值可能不存在；判断不存在时，那就肯定不存在。</p>
<p><strong>不支持删除</strong></p>
<p>一个bit位置其实是被复用的.</p>
<p><strong>不可逆,无法迁移扩容</strong></p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2>
<p><strong>mightContains</strong></p>
<p>判断某个值存在时，这个值可能不存在；判断不存在时，那就肯定不存在。</p>
<p><strong>不支持删除</strong></p>
<p>一个bit位置其实是被复用的.</p>
<p><strong>不可逆,无法迁移扩容</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[获取动态代理类的目标对象]]></title>
        <id>https://imatvoid.github.io//post/huo-qu-dong-tai-dai-li-lei-de-mu-biao-dui-xiang</id>
        <link href="https://imatvoid.github.io//post/huo-qu-dong-tai-dai-li-lei-de-mu-biao-dui-xiang">
        </link>
        <updated>2019-09-09T02:08:46.000Z</updated>
        <summary type="html"><![CDATA[<p>在目标对象被动态代理后,在一些场景中,我们需要拿到原始的对象</p>
]]></summary>
        <content type="html"><![CDATA[<p>在目标对象被动态代理后,在一些场景中,我们需要拿到原始的对象</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[binlog日志格式]]></title>
        <id>https://imatvoid.github.io//post/binlog-ri-zhi-ge-shi</id>
        <link href="https://imatvoid.github.io//post/binlog-ri-zhi-ge-shi">
        </link>
        <updated>2019-08-31T12:05:17.000Z</updated>
        <summary type="html"><![CDATA[<p>Statement：每一条会修改数据的sql都会记录在binlog中<br>
Row:不记录sql语句上下文相关信息，仅保存哪条记录被修改<br>
Mixedlevel: 是以上两种level的混合使用，一般的语句修改使用statment格式保存binlog，如一些函数，statement无法完成主从复制的操作，则采用row格式保存binlog</p>
]]></summary>
        <content type="html"><![CDATA[<p>Statement：每一条会修改数据的sql都会记录在binlog中<br>
Row:不记录sql语句上下文相关信息，仅保存哪条记录被修改<br>
Mixedlevel: 是以上两种level的混合使用，一般的语句修改使用statment格式保存binlog，如一些函数，statement无法完成主从复制的操作，则采用row格式保存binlog</p>
]]></content>
    </entry>
</feed>